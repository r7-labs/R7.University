@inherits DotNetNuke.Web.Mvc.Framework.DnnWebViewPage<EduVolumeDirectoryViewModel>
@using System.Collections.Generic
@using DotNetNuke.Collections
@using DotNetNuke.Web.Mvc.Helpers
@using DotNetNuke.Web.Client.ClientResourceManagement
@using DotNetNuke.Framework
@using DotNetNuke.Common
@using DotNetNuke.Common.Utilities
@using R7.University.Components
@using R7.University.ModelExtensions
@using R7.University.ViewModels
@using R7.University.Controls.ViewModels
@using R7.University.EduProgramProfiles.Models
@using R7.University.EduProgramProfiles.ViewModels
@{
    ClientResourceManager.RegisterStyleSheet (Dnn.DnnPage, "~/DesktopModules/MVC/R7.University/R7.University/assets/css/module.css");
    ClientResourceManager.RegisterScript (Dnn.DnnPage, "~/DesktopModules/MVC/R7.University/R7.University/assets/js/module.js", 100, "DnnFormBottomProvider");
}
@if (!Model.IsConfigured || Model.IsEmpty) {
    if (Dnn.ModuleContext.IsEditable) {
        if (!Model.IsConfigured) {
            <p class="dnnFormMessage dnnFormInfo">@Dnn.LocalizeString("NotConfigured.Text")</p>
        }
        if (Model.IsEmpty) {
            <p class="dnnFormMessage dnnFormInfo">@Dnn.LocalizeString("NothingToDisplay.Text")</p>
        }
    }
    else {
        var containerControl = Globals.FindControlRecursiveDown (Dnn.DnnPage, "ctr" + Dnn.ModuleContext.ModuleId);
        containerControl.Visible = false;
    }
}
else {
    <div class="u8y-eduvolume-directory">
        <div class="table-responsive">
            <table class="table table-striped table-bordered table-hover u8y-eduvolume-directory-table"
			    itemprop="@Model.ItemProp">
                <thead>
    			    <tr>
        			    @if (Dnn.ModuleContext.IsEditable) {
                            <th scope="col" rowspan="2"></th>
                        }
    				    <th scope="col" rowspan="2">@Dnn.LocalizeString("EduCode.Column")</th>
        			    <th scope="col" rowspan="2">@Dnn.LocalizeString("EduProgram.Column")</th>
    				    <th scope="col" rowspan="2">@Dnn.LocalizeString("EduLevel.Column")</th>
    				    <th scope="col" rowspan="2">@Dnn.LocalizeString("StartingYear.Column")</th>
    				    <th scope="col" rowspan="2">@Dnn.LocalizeString("EduForm.Column")</th>
    				    @if (Model.Settings.ShowTimeToLearnMonths) {
                            <th scope="col" rowspan="2">@Dnn.LocalizeString("TimeToLearnMonths.Column")</th>
                        }
    				    @if (Model.Settings.ShowTimeToLearnHours) {
    				        <th scope="col" rowspan="2">@Dnn.LocalizeString("TimeToLearnHours.Column")</th>
                        }
					    @if (Model.Settings.Mode == EduVolumeDirectoryMode.Practices) {
        			        <th scope="col" colspan="3">@Dnn.LocalizeString("Practices.Column")</th>
                        }
					    else {
                            <th scope="col" colspan="6">@Dnn.LocalizeString("EduVolume.Column")</th>
                        }
    				</tr>
    			    <tr>
					    @if (Model.Settings.Mode == EduVolumeDirectoryMode.Practices) {
    				        <th scope="col">@Dnn.LocalizeString("PracticeType1.Column")</th>
                            <th scope="col">@Dnn.LocalizeString("PracticeType2.Column")</th>
                            <th scope="col">@Dnn.LocalizeString("PracticeType3.Column")</th>
                        }
					    else {
                            <th scope="col">1</th>
                            <th scope="col">2</th>
                            <th scope="col">3</th>
                            <th scope="col">4</th>
                            <th scope="col">5</th>
                            <th scope="col">6</th>
                        }
					</tr>
    			</thead>
        	    <tbody>
            	    @foreach (var ev in Model.EduVolumeViewModels) {
                        <tr id="@ev.HtmlElementId" class="@ev.CssClass" itemprop="@ev.ItemProp">
    				        @if (Dnn.ModuleContext.IsEditable) {
								<td class="u8y-actions">
									<a href="@ev.EditUrl" onclick="r7_University_selectItem(jQuery,this)"><img src="@ev.EditIconUrl" /></a>
									<span class="u8y-selected-item-marker">&#9654;</span>
								</td>
                            }
            			    <td itemprop="eduCode">@ev.EduProfile.EduProgram.Code</td>
    				        <td itemprop="eduName">@ev.EduProgramProfileTitle</td>
                            <td itemprop="eduLevel">@ev.EduProfile.EduLevel.Title</td>
    				        <td>@ev.Year.Year</td>
    				        <td itemprop="eduForm">@ev.EduFormTitle</td>
    				        @if (Model.Settings.ShowTimeToLearnMonths) {
                                <td>@ev.TimeToLearnMonths</td>
                            }
    				        @if (Model.Settings.ShowTimeToLearnHours) {
    				            <td>@ev.TimeToLearnHours</td>
                            }
					        @if (Model.Settings.Mode == EduVolumeDirectoryMode.Practices) {
                                <td>@ev.PracticeType1Cu</td>
                                <td>@ev.PracticeType2Cu</td>
                                <td>@ev.PracticeType3Cu</td>
                            }
					        else {
                                <td>@ev.Year1Cu</td>
                                <td>@ev.Year2Cu</td>
                                <td>@ev.Year3Cu</td>
                                <td>@ev.Year4Cu</td>
                                <td>@ev.Year5Cu</td>
                                <td>@ev.Year6Cu</td>
                            }
    					</tr>
                    }
        		</tbody>
            </table>
    	</div>
        @Html.Partial("~/DesktopModules/MVC/R7.University/R7.University.Controls/Views/_AgplSignature.cshtml", new AgplSignatureViewModel ())
    </div>
    @Html.Partial("~/DesktopModules/MVC/R7.University/R7.University.Controls/Views/_SelectedItemScript.cshtml", null)
}
