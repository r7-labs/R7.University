--
--  01.04.00.SqlDataProvider
--
--  Author:
--       Roman M. Yagodin <roman.yagodin@gmail.com>
--
--  Copyright (c) 2015 Roman M. Yagodin
--
--  This program is free software: you can redistribute it and/or modify
--  it under the terms of the GNU Affero General Public License as published by
--  the Free Software Foundation, either version 3 of the License, or
--  (at your option) any later version.
--
--  This program is distributed in the hope that it will be useful,
--  but WITHOUT ANY WARRANTY; without even the implied warranty of
--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--  GNU Affero General Public License for more details.
--
--  You should have received a copy of the GNU Affero General Public License
--  along with this program.  If not, see <http://www.gnu.org/licenses/>.

-- NOTE: To manually execute this script you must 
-- replace {databaseOwner} and {objectQualifier} with real values. 
-- Defaults is "dbo." for database owner and "" for object qualifier 

-- DocumentTypes

IF NOT EXISTS (select * from sys.objects where object_id = object_id(N'{databaseOwner}[{objectQualifier}University_DocumentTypes]') and type in (N'U'))
BEGIN
    CREATE TABLE {databaseOwner}[{objectQualifier}University_DocumentTypes] (
        [DocumentTypeID] int IDENTITY (1,1) NOT NULL,
        [Type] nvarchar (64) NOT NULL,
        [Description] nvarchar (255),
        [IsSystem] bit NOT NULL DEFAULT ((0))
        CONSTRAINT [PK_{objectQualifier}University_DocumentTypes] PRIMARY KEY CLUSTERED (DocumentTypeID)
    )

    -- must be same as SystemDocumentType enum members
    INSERT INTO {databaseOwner}[{objectQualifier}University_DocumentTypes] (Type, IsSystem) VALUES
        (N'OrderEnrollment', 1),
        (N'OrderExpulsion', 1),
        (N'OrderRestoration', 1),
        (N'OrderTransfer', 1),
        (N'OrderAcademicLeave', 1),
        (N'EduStandard', 1),
        (N'EduProgram', 1),
        (N'EduSchedule', 1),
        (N'EduPlan', 1),
        (N'EduMaterial', 1),
        (N'WorkProgramAnnotation', 1),
        (N'WorkProgramOfPractice', 1),
        (N'Contingent', 1),
        (N'ContingentMovement', 1),
        (N'ScienceInfo', 1)
END
GO

-- Documents

IF NOT EXISTS (select * from sys.objects where object_id = object_id(N'{databaseOwner}[{objectQualifier}University_Documents]') and type in (N'U'))
BEGIN
    CREATE TABLE {databaseOwner}[{objectQualifier}University_Documents] (
        [DocumentID] int IDENTITY(1,1) NOT NULL,
        [DocumentTypeID] int,
        [ItemID] nvarchar (64) NOT NULL,
        [Title] nvarchar (255),
        [Url] nvarchar (255),
        [SortIndex] int NOT NULL DEFAULT ((0)),
        [StartDate] datetime,
        [EndDate] datetime
        CONSTRAINT [PK_{objectQualifier}University_Documents] PRIMARY KEY CLUSTERED (DocumentID)
        CONSTRAINT [FK_{objectQualifier}University_Documents_DocumentTypes] FOREIGN KEY (DocumentTypeID)
            REFERENCES {databaseOwner}[{objectQualifier}University_DocumentTypes] (DocumentTypeID) ON DELETE SET NULL
    )   

    CREATE NONCLUSTERED INDEX [IX_{objectQualifier}University_Documents_Items] 
        ON {databaseOwner}[{objectQualifier}University_Documents] ([ItemID])
END
GO

-- Drop views

IF EXISTS (select * from sys.objects where object_id = object_id(N'{databaseOwner}[{objectQualifier}vw_University_Documents]') and type in (N'V'))
    DROP VIEW {databaseOwner}[{objectQualifier}vw_University_Documents]
GO

-- Create views

CREATE VIEW {databaseOwner}[{objectQualifier}vw_University_Documents] AS
    SELECT D.*, DT.Type FROM {databaseOwner}[{objectQualifier}University_Documents] AS D
        LEFT OUTER JOIN {databaseOwner}[{objectQualifier}University_DocumentTypes] AS DT 
            ON D.DocumentTypeID = DT.DocumentTypeID
GO